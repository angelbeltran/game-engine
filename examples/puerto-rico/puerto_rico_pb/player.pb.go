// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: github.com/angelbeltran/game-engine/examples/puerto-rico/player.proto

package puerto_rico_pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PlayerID int32

const (
	PlayerID_NO_PLAYER PlayerID = 0
	PlayerID_PLAYER_1  PlayerID = 1
	PlayerID_PLAYER_2  PlayerID = 2
	PlayerID_PLAYER_3  PlayerID = 3
	PlayerID_PLAYER_4  PlayerID = 4
	PlayerID_PLAYER_5  PlayerID = 5
)

// Enum value maps for PlayerID.
var (
	PlayerID_name = map[int32]string{
		0: "NO_PLAYER",
		1: "PLAYER_1",
		2: "PLAYER_2",
		3: "PLAYER_3",
		4: "PLAYER_4",
		5: "PLAYER_5",
	}
	PlayerID_value = map[string]int32{
		"NO_PLAYER": 0,
		"PLAYER_1":  1,
		"PLAYER_2":  2,
		"PLAYER_3":  3,
		"PLAYER_4":  4,
		"PLAYER_5":  5,
	}
)

func (x PlayerID) Enum() *PlayerID {
	p := new(PlayerID)
	*p = x
	return p
}

func (x PlayerID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerID) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_enumTypes[0].Descriptor()
}

func (PlayerID) Type() protoreflect.EnumType {
	return &file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_enumTypes[0]
}

func (x PlayerID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerID.Descriptor instead.
func (PlayerID) EnumDescriptor() ([]byte, []int) {
	return file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_rawDescGZIP(), []int{0}
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Present        bool                `protobuf:"varint,1,opt,name=present,proto3" json:"present,omitempty"`
	Role           RoleID              `protobuf:"varint,2,opt,name=role,proto3,enum=puerto_rico_game.RoleID" json:"role,omitempty"`
	Doubloons      uint32              `protobuf:"varint,3,opt,name=doubloons,proto3" json:"doubloons,omitempty"`
	VictoryPoints  uint32              `protobuf:"varint,4,opt,name=victory_points,json=victoryPoints,proto3" json:"victory_points,omitempty"`
	Buildings      *Player_Buildings   `protobuf:"bytes,5,opt,name=buildings,proto3" json:"buildings,omitempty"`
	Quarries       uint32              `protobuf:"varint,6,opt,name=quarries,proto3" json:"quarries,omitempty"`
	Plantations    *Player_Plantations `protobuf:"bytes,7,opt,name=plantations,proto3" json:"plantations,omitempty"`
	Goods          *Player_Goods       `protobuf:"bytes,8,opt,name=goods,proto3" json:"goods,omitempty"`
	ExtraColonists uint32              `protobuf:"varint,9,opt,name=extra_colonists,json=extraColonists,proto3" json:"extra_colonists,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_rawDescGZIP(), []int{0}
}

func (x *Player) GetPresent() bool {
	if x != nil {
		return x.Present
	}
	return false
}

func (x *Player) GetRole() RoleID {
	if x != nil {
		return x.Role
	}
	return RoleID_NO_ROLE
}

func (x *Player) GetDoubloons() uint32 {
	if x != nil {
		return x.Doubloons
	}
	return 0
}

func (x *Player) GetVictoryPoints() uint32 {
	if x != nil {
		return x.VictoryPoints
	}
	return 0
}

func (x *Player) GetBuildings() *Player_Buildings {
	if x != nil {
		return x.Buildings
	}
	return nil
}

func (x *Player) GetQuarries() uint32 {
	if x != nil {
		return x.Quarries
	}
	return 0
}

func (x *Player) GetPlantations() *Player_Plantations {
	if x != nil {
		return x.Plantations
	}
	return nil
}

func (x *Player) GetGoods() *Player_Goods {
	if x != nil {
		return x.Goods
	}
	return nil
}

func (x *Player) GetExtraColonists() uint32 {
	if x != nil {
		return x.ExtraColonists
	}
	return 0
}

type Player_Buildings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SmallIndigoPlant bool `protobuf:"varint,1,opt,name=small_indigo_plant,json=smallIndigoPlant,proto3" json:"small_indigo_plant,omitempty"`
	SmallSugarMill   bool `protobuf:"varint,2,opt,name=small_sugar_mill,json=smallSugarMill,proto3" json:"small_sugar_mill,omitempty"`
	SmallMarket      bool `protobuf:"varint,3,opt,name=small_market,json=smallMarket,proto3" json:"small_market,omitempty"`
	Hacienda         bool `protobuf:"varint,4,opt,name=hacienda,proto3" json:"hacienda,omitempty"`
	ConstructionHut  bool `protobuf:"varint,5,opt,name=construction_hut,json=constructionHut,proto3" json:"construction_hut,omitempty"`
	SmallWarehouse   bool `protobuf:"varint,6,opt,name=small_warehouse,json=smallWarehouse,proto3" json:"small_warehouse,omitempty"`
	IndigoPlant      bool `protobuf:"varint,7,opt,name=indigo_plant,json=indigoPlant,proto3" json:"indigo_plant,omitempty"`
	SugarMill        bool `protobuf:"varint,8,opt,name=sugar_mill,json=sugarMill,proto3" json:"sugar_mill,omitempty"`
	Hospice          bool `protobuf:"varint,9,opt,name=hospice,proto3" json:"hospice,omitempty"`
	Office           bool `protobuf:"varint,10,opt,name=office,proto3" json:"office,omitempty"`
	LargeMarket      bool `protobuf:"varint,11,opt,name=large_market,json=largeMarket,proto3" json:"large_market,omitempty"`
	LargeWarhouse    bool `protobuf:"varint,12,opt,name=large_warhouse,json=largeWarhouse,proto3" json:"large_warhouse,omitempty"`
	TobaccoStorage   bool `protobuf:"varint,13,opt,name=tobacco_storage,json=tobaccoStorage,proto3" json:"tobacco_storage,omitempty"`
	CoffeeRoaster    bool `protobuf:"varint,14,opt,name=coffee_roaster,json=coffeeRoaster,proto3" json:"coffee_roaster,omitempty"`
	Factory          bool `protobuf:"varint,15,opt,name=factory,proto3" json:"factory,omitempty"`
	University       bool `protobuf:"varint,16,opt,name=university,proto3" json:"university,omitempty"`
	Harbor           bool `protobuf:"varint,17,opt,name=harbor,proto3" json:"harbor,omitempty"`
	Wharf            bool `protobuf:"varint,18,opt,name=wharf,proto3" json:"wharf,omitempty"`
	BuildHall        bool `protobuf:"varint,19,opt,name=build_hall,json=buildHall,proto3" json:"build_hall,omitempty"`
	Residence        bool `protobuf:"varint,20,opt,name=residence,proto3" json:"residence,omitempty"`
	Fortress         bool `protobuf:"varint,21,opt,name=fortress,proto3" json:"fortress,omitempty"`
}

func (x *Player_Buildings) Reset() {
	*x = Player_Buildings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player_Buildings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player_Buildings) ProtoMessage() {}

func (x *Player_Buildings) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player_Buildings.ProtoReflect.Descriptor instead.
func (*Player_Buildings) Descriptor() ([]byte, []int) {
	return file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Player_Buildings) GetSmallIndigoPlant() bool {
	if x != nil {
		return x.SmallIndigoPlant
	}
	return false
}

func (x *Player_Buildings) GetSmallSugarMill() bool {
	if x != nil {
		return x.SmallSugarMill
	}
	return false
}

func (x *Player_Buildings) GetSmallMarket() bool {
	if x != nil {
		return x.SmallMarket
	}
	return false
}

func (x *Player_Buildings) GetHacienda() bool {
	if x != nil {
		return x.Hacienda
	}
	return false
}

func (x *Player_Buildings) GetConstructionHut() bool {
	if x != nil {
		return x.ConstructionHut
	}
	return false
}

func (x *Player_Buildings) GetSmallWarehouse() bool {
	if x != nil {
		return x.SmallWarehouse
	}
	return false
}

func (x *Player_Buildings) GetIndigoPlant() bool {
	if x != nil {
		return x.IndigoPlant
	}
	return false
}

func (x *Player_Buildings) GetSugarMill() bool {
	if x != nil {
		return x.SugarMill
	}
	return false
}

func (x *Player_Buildings) GetHospice() bool {
	if x != nil {
		return x.Hospice
	}
	return false
}

func (x *Player_Buildings) GetOffice() bool {
	if x != nil {
		return x.Office
	}
	return false
}

func (x *Player_Buildings) GetLargeMarket() bool {
	if x != nil {
		return x.LargeMarket
	}
	return false
}

func (x *Player_Buildings) GetLargeWarhouse() bool {
	if x != nil {
		return x.LargeWarhouse
	}
	return false
}

func (x *Player_Buildings) GetTobaccoStorage() bool {
	if x != nil {
		return x.TobaccoStorage
	}
	return false
}

func (x *Player_Buildings) GetCoffeeRoaster() bool {
	if x != nil {
		return x.CoffeeRoaster
	}
	return false
}

func (x *Player_Buildings) GetFactory() bool {
	if x != nil {
		return x.Factory
	}
	return false
}

func (x *Player_Buildings) GetUniversity() bool {
	if x != nil {
		return x.University
	}
	return false
}

func (x *Player_Buildings) GetHarbor() bool {
	if x != nil {
		return x.Harbor
	}
	return false
}

func (x *Player_Buildings) GetWharf() bool {
	if x != nil {
		return x.Wharf
	}
	return false
}

func (x *Player_Buildings) GetBuildHall() bool {
	if x != nil {
		return x.BuildHall
	}
	return false
}

func (x *Player_Buildings) GetResidence() bool {
	if x != nil {
		return x.Residence
	}
	return false
}

func (x *Player_Buildings) GetFortress() bool {
	if x != nil {
		return x.Fortress
	}
	return false
}

type Player_Plantations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Corn    uint32 `protobuf:"varint,1,opt,name=corn,proto3" json:"corn,omitempty"`
	Indigo  uint32 `protobuf:"varint,2,opt,name=indigo,proto3" json:"indigo,omitempty"`
	Sugar   uint32 `protobuf:"varint,3,opt,name=sugar,proto3" json:"sugar,omitempty"`
	Tobacco uint32 `protobuf:"varint,4,opt,name=tobacco,proto3" json:"tobacco,omitempty"`
	Coffee  uint32 `protobuf:"varint,5,opt,name=coffee,proto3" json:"coffee,omitempty"`
}

func (x *Player_Plantations) Reset() {
	*x = Player_Plantations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player_Plantations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player_Plantations) ProtoMessage() {}

func (x *Player_Plantations) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player_Plantations.ProtoReflect.Descriptor instead.
func (*Player_Plantations) Descriptor() ([]byte, []int) {
	return file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Player_Plantations) GetCorn() uint32 {
	if x != nil {
		return x.Corn
	}
	return 0
}

func (x *Player_Plantations) GetIndigo() uint32 {
	if x != nil {
		return x.Indigo
	}
	return 0
}

func (x *Player_Plantations) GetSugar() uint32 {
	if x != nil {
		return x.Sugar
	}
	return 0
}

func (x *Player_Plantations) GetTobacco() uint32 {
	if x != nil {
		return x.Tobacco
	}
	return 0
}

func (x *Player_Plantations) GetCoffee() uint32 {
	if x != nil {
		return x.Coffee
	}
	return 0
}

type Player_Goods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Corn    uint32 `protobuf:"varint,1,opt,name=corn,proto3" json:"corn,omitempty"`
	Indigo  uint32 `protobuf:"varint,2,opt,name=indigo,proto3" json:"indigo,omitempty"`
	Sugar   uint32 `protobuf:"varint,3,opt,name=sugar,proto3" json:"sugar,omitempty"`
	Tobacco uint32 `protobuf:"varint,4,opt,name=tobacco,proto3" json:"tobacco,omitempty"`
	Coffee  uint32 `protobuf:"varint,5,opt,name=coffee,proto3" json:"coffee,omitempty"`
}

func (x *Player_Goods) Reset() {
	*x = Player_Goods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player_Goods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player_Goods) ProtoMessage() {}

func (x *Player_Goods) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player_Goods.ProtoReflect.Descriptor instead.
func (*Player_Goods) Descriptor() ([]byte, []int) {
	return file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Player_Goods) GetCorn() uint32 {
	if x != nil {
		return x.Corn
	}
	return 0
}

func (x *Player_Goods) GetIndigo() uint32 {
	if x != nil {
		return x.Indigo
	}
	return 0
}

func (x *Player_Goods) GetSugar() uint32 {
	if x != nil {
		return x.Sugar
	}
	return 0
}

func (x *Player_Goods) GetTobacco() uint32 {
	if x != nil {
		return x.Tobacco
	}
	return 0
}

func (x *Player_Goods) GetCoffee() uint32 {
	if x != nil {
		return x.Coffee
	}
	return 0
}

var File_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto protoreflect.FileDescriptor

var file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_rawDesc = []byte{
	0x0a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x67,
	0x65, 0x6c, 0x62, 0x65, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2d, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x70,
	0x75, 0x65, 0x72, 0x74, 0x6f, 0x2d, 0x72, 0x69, 0x63, 0x6f, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x70, 0x75, 0x65, 0x72, 0x74, 0x6f, 0x5f,
	0x72, 0x69, 0x63, 0x6f, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x1a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x62, 0x65, 0x6c, 0x74, 0x72,
	0x61, 0x6e, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2d, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x70, 0x75, 0x65, 0x72, 0x74, 0x6f, 0x2d, 0x72,
	0x69, 0x63, 0x6f, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe3,
	0x0a, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x70, 0x75, 0x65, 0x72, 0x74, 0x6f, 0x5f, 0x72, 0x69, 0x63, 0x6f, 0x5f,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x52, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x6f, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x6f, 0x6f, 0x6e, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x76, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x76, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x40, 0x0a, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x75, 0x65, 0x72,
	0x74, 0x6f, 0x5f, 0x72, 0x69, 0x63, 0x6f, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x09, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x75, 0x65, 0x72,
	0x74, 0x6f, 0x5f, 0x72, 0x69, 0x63, 0x6f, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x0b, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x34, 0x0a, 0x05,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x75,
	0x65, 0x72, 0x74, 0x6f, 0x5f, 0x72, 0x69, 0x63, 0x6f, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x05, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x6e, 0x69, 0x73, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x43, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x73, 0x74, 0x73, 0x1a, 0xc5, 0x05, 0x0a, 0x09,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x6d, 0x61,
	0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x67, 0x6f, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x64, 0x69,
	0x67, 0x6f, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x6d, 0x61, 0x6c, 0x6c,
	0x5f, 0x73, 0x75, 0x67, 0x61, 0x72, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x53, 0x75, 0x67, 0x61, 0x72, 0x4d, 0x69, 0x6c,
	0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x63, 0x69, 0x65, 0x6e, 0x64, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x61, 0x63, 0x69, 0x65, 0x6e, 0x64, 0x61,
	0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x68, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x75, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x57, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x64, 0x69, 0x67, 0x6f, 0x5f, 0x70,
	0x6c, 0x61, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x6e, 0x64, 0x69,
	0x67, 0x6f, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x67, 0x61, 0x72,
	0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x75, 0x67,
	0x61, 0x72, 0x4d, 0x69, 0x6c, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x63,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x72, 0x67,
	0x65, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x6c, 0x61, 0x72, 0x67, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6c,
	0x61, 0x72, 0x67, 0x65, 0x5f, 0x77, 0x61, 0x72, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x57, 0x61, 0x72, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x62, 0x61, 0x63, 0x63, 0x6f, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x74, 0x6f, 0x62,
	0x61, 0x63, 0x63, 0x6f, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6f, 0x66, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x6f, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x52, 0x6f, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a,
	0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x69, 0x74, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x61, 0x72, 0x62, 0x6f, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x61,
	0x72, 0x62, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x68, 0x61, 0x72, 0x66, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x77, 0x68, 0x61, 0x72, 0x66, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x5f, 0x68, 0x61, 0x6c, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x48, 0x61, 0x6c, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65,
	0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x72, 0x74, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x6f, 0x72, 0x74, 0x72,
	0x65, 0x73, 0x73, 0x1a, 0x81, 0x01, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x6f, 0x72, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x64, 0x69, 0x67,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x6e, 0x64, 0x69, 0x67, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x75, 0x67, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x73, 0x75, 0x67, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x62, 0x61, 0x63, 0x63, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x6f, 0x62, 0x61, 0x63, 0x63, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x63, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x1a, 0x7b, 0x0a, 0x05, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x72, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x64, 0x69, 0x67, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x6e, 0x64, 0x69, 0x67, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x75, 0x67, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x75, 0x67,
	0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x62, 0x61, 0x63, 0x63, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x6f, 0x62, 0x61, 0x63, 0x63, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x6f,
	0x66, 0x66, 0x65, 0x65, 0x2a, 0x5f, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x31, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x32, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x33, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x4c, 0x41,
	0x59, 0x45, 0x52, 0x5f, 0x34, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x4c, 0x41, 0x59, 0x45,
	0x52, 0x5f, 0x35, 0x10, 0x05, 0x42, 0x49, 0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x62, 0x65, 0x6c, 0x74, 0x72, 0x61, 0x6e,
	0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2d, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x70, 0x75, 0x65, 0x72, 0x74, 0x6f, 0x2d, 0x72, 0x69, 0x63,
	0x6f, 0x2f, 0x70, 0x75, 0x65, 0x72, 0x74, 0x6f, 0x5f, 0x72, 0x69, 0x63, 0x6f, 0x5f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_rawDescOnce sync.Once
	file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_rawDescData = file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_rawDesc
)

func file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_rawDescGZIP() []byte {
	file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_rawDescOnce.Do(func() {
		file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_rawDescData)
	})
	return file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_rawDescData
}

var file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_goTypes = []interface{}{
	(PlayerID)(0),              // 0: puerto_rico_game.PlayerID
	(*Player)(nil),             // 1: puerto_rico_game.Player
	(*Player_Buildings)(nil),   // 2: puerto_rico_game.Player.Buildings
	(*Player_Plantations)(nil), // 3: puerto_rico_game.Player.Plantations
	(*Player_Goods)(nil),       // 4: puerto_rico_game.Player.Goods
	(RoleID)(0),                // 5: puerto_rico_game.RoleID
}
var file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_depIdxs = []int32{
	5, // 0: puerto_rico_game.Player.role:type_name -> puerto_rico_game.RoleID
	2, // 1: puerto_rico_game.Player.buildings:type_name -> puerto_rico_game.Player.Buildings
	3, // 2: puerto_rico_game.Player.plantations:type_name -> puerto_rico_game.Player.Plantations
	4, // 3: puerto_rico_game.Player.goods:type_name -> puerto_rico_game.Player.Goods
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_init() }
func file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_init() {
	if File_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto != nil {
		return
	}
	file_github_com_angelbeltran_game_engine_examples_puerto_rico_role_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player_Buildings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player_Plantations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player_Goods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_goTypes,
		DependencyIndexes: file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_depIdxs,
		EnumInfos:         file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_enumTypes,
		MessageInfos:      file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_msgTypes,
	}.Build()
	File_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto = out.File
	file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_rawDesc = nil
	file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_goTypes = nil
	file_github_com_angelbeltran_game_engine_examples_puerto_rico_player_proto_depIdxs = nil
}
